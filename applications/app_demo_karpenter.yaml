apiVersion: v1
kind: Namespace
metadata:
  labels:
    kubernetes.io/metadata.name: app1
  name: app1
spec:
  finalizers:
  - kubernetes
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app1
  namespace: app1
  labels:
    name: app1
spec:
  replicas: 10
  selector:
    matchLabels:
      name: app1
  template:
    metadata:
      labels:
        name: app1
        plane: control
    spec:
      containers:
        - name: app
          image: k8s.gcr.io/hpa-example
          ports:
            - containerPort: 80
          resources:
            requests:
              cpu: 400m
              memory: 400Mi
            limits:
              cpu: 800m
      tolerations:
      - key: "dedicated"
        operator: "Exists"
        effect: "NoSchedule"
---
apiVersion: v1
kind: Service
metadata:
  name: app1
  labels:
    name: app1
  namespace: app1
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
  selector:
    name: app1
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app1
  namespace: app1
  annotations:
    external-dns.alpha.kubernetes.io/hostname: app1.damien-jacinto.com
    external-dns.alpha.kubernetes.io/aws-region: eu-central-1
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/group.name: exemples
spec:
  ingressClassName: alb
  rules:
    - host: app1.damien-jacinto.com
      http:
        paths:
          - path: /
            pathType: Exact
            backend:
              service:
                name: app1
                port:
                  number: 80
